{"ast":null,"code":"import _slicedToArray from \"/root/ReactApp/darkbank/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/root/ReactApp/darkbank/src/Components/dashboard/addJob.js\";\n\nimport React from \"react\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ReactQuill from \"react-quill\";\nimport { Card, CardBody, CardImg, Form, FormInput } from \"shards-react\";\nimport AdminDashboard from \".\";\nimport \"./CSS/addJob.css\";\nimport { Slider } from \"shards-react\";\nimport AdminFooter from \"./admin-footer\";\nimport RangeSalary from \"./rangeSalary\"; // The page is built on Shards React Library\n\nimport { useState, useEffect } from \"react\";\n\nvar axios = require(\"axios\").default;\n\nvar AddJob = function AddJob() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      JobImage = _useState2[0],\n      setJobImage = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      JobTitle = _useState4[0],\n      setJobTitle = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      JobSalary = _useState6[0],\n      setJobSalary = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      JobValidity = _useState8[0],\n      setJobValidity = _useState8[1];\n\n  var displayImage = function displayImage(event) {\n    var reader = new FileReader();\n\n    reader.onload = function () {\n      var output = document.getElementById(\"imagePreview\");\n      output.src = reader.result;\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n    setJobImage(event.target.value);\n  };\n\n  var publishJob = function publishJob(e) {\n    e.preventDefault();\n    document.getElementById(\"postFeedback\").innerHTML = \"\";\n    var urlLink = \"http://localhost:5000/job/newpost\";\n    var dataObject = new FormData();\n    dataObject.append(\"POSTEDBY\", localStorage.getItem(\"userToken\"));\n    dataObject.append(\"JOBTITLE\", JobTitle);\n    dataObject.append(\"JOBROLES\", document.getElementById(\"jobDesc\").innerText);\n    dataObject.append(\"JOBIMAGE\", document.getElementById(\"jobFile\").files[0]); // dataObject.append(\"JOBSALARYSTARTRANGE\",)\n\n    console.log(JobSalary);\n\n    if (JobTitle.length > 2 && JobImage !== \"\" && document.getElementById(\"jobDesc\").innerText !== \"\\n\") {\n      axios({\n        method: \"POST\",\n        url: urlLink,\n        data: dataObject\n      }).then(function (response) {\n        document.getElementById(\"postFeedback\").innerHTML = \"Great! You've just added a new blog post.\";\n        document.getElementById(\"postFeedback\").style.color = \"rgba(1,16,10,1)\";\n      }).catch(function (err) {\n        if (err.response.data.message === \"Invalid Email\") {\n          document.getElementById(\"postFeedback\").innerHTML = \"Sorry, you're not authorized for this!\";\n        } else {\n          document.getElementById(\"postFeedback\").innerHTML = err.response.data.message;\n        }\n\n        document.getElementById(\"postFeedback\").style.color = \"red\";\n      });\n    } else {\n      document.getElementById(\"postFeedback\").innerHTML = \"Ops, seems all the fields are not well filled!\";\n      document.getElementById(\"postFeedback\").style.color = \"red\";\n    }\n  };\n\n  document.title = \"DarkBank | Admin | POST A NEW JOB\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AdminDashboard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \".\"), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"addForm jobForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"POST A NEW JOB\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"1.1em\"\n    },\n    id: \"postFeedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"add-new-post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    size: \"lg\",\n    className: \"job-col1\",\n    placeholder: \"Job Title\",\n    onChange: function onChange(event) {\n      return setJobTitle(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    size: \"lg\",\n    className: \"job-col1 job\",\n    type: \"date\",\n    onChange: function onChange(event) {\n      return setJobValidity(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RangeSalary, {\n    onChange: function onChange(event) {\n      return setJobSalary(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \" JOB SALARY IN DOLLARS: \", JSON.stringify(_this.state.value), \" \"), /*#__PURE__*/React.createElement(Slider, {\n    connect: true,\n    onSlide: _this.handleSlide,\n    className: \"slider\",\n    start: _this.state.value,\n    range: {\n      min: 0,\n      max: 10000\n    },\n    onChange: console.log(\"seen\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"jobImgInd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"UPLOAD AND PREVIEW JOB IMAGE HERE!\"), /*#__PURE__*/React.createElement(CardImg, {\n    id: \"imagePreview\",\n    className: \"JobImage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    size: \"lg\",\n    className: \"selectImage\",\n    placeholder: \"Job Title\",\n    onChange: displayImage,\n    id: \"jobFile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ReactQuill, {\n    className: \"add-new-post__editor mb-1 jobDescription\",\n    placeholder: \"Description of the Job here\",\n    id: \"jobDesc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"publishJob\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"publish-btn\",\n    onClick: publishJob,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"Publish\"))), /*#__PURE__*/React.createElement(AdminFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AddJob;","map":{"version":3,"sources":["/root/ReactApp/darkbank/src/Components/dashboard/addJob.js"],"names":["React","ReactQuill","Card","CardBody","CardImg","Form","FormInput","AdminDashboard","Slider","AdminFooter","RangeSalary","useState","useEffect","axios","require","default","AddJob","JobImage","setJobImage","JobTitle","setJobTitle","JobSalary","setJobSalary","JobValidity","setJobValidity","displayImage","event","reader","FileReader","onload","output","document","getElementById","src","result","readAsDataURL","target","files","value","publishJob","e","preventDefault","innerHTML","urlLink","dataObject","FormData","append","localStorage","getItem","innerText","console","log","length","method","url","data","then","response","style","color","catch","err","message","title","marginLeft","JSON","stringify","state","handleSlide","min","max"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ReactQuill from \"react-quill\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  Form,\n  FormInput\n} from \"shards-react\";\nimport AdminDashboard from \".\";\nimport \"./CSS/addJob.css\";\nimport { Slider } from \"shards-react\";\n\nimport AdminFooter from \"./admin-footer\";\nimport RangeSalary from \"./rangeSalary\";\n\n// The page is built on Shards React Library\n\nimport { useState, useEffect } from \"react\";\nconst axios = require(\"axios\").default;\n\n\n\nconst AddJob = () => {\n  \n  const [JobImage, setJobImage] = useState(\"\");\n\n  const [JobTitle, setJobTitle] = useState(\"\");\n\n  const [JobSalary, setJobSalary] = useState(\"\");\n\n  const [JobValidity, setJobValidity] = useState(\"\");\n\n\n  const displayImage = (event) => {\n    var reader = new FileReader();\n    reader.onload = function() {\n      var output = document.getElementById(\"imagePreview\");\n      output.src = reader.result;\n    };\n    \n    reader.readAsDataURL(event.target.files[0]);\n    \n    setJobImage(event.target.value);\n  }\n\n  const publishJob = (e) =>{\n    e.preventDefault();\n\n    document.getElementById(\"postFeedback\").innerHTML = \"\";\n\n    const urlLink = \"http://localhost:5000/job/newpost\";\n\n    const dataObject = new FormData();\n\n    dataObject.append(\"POSTEDBY\", localStorage.getItem(\"userToken\"));\n\n    dataObject.append(\"JOBTITLE\", JobTitle);\n\n    dataObject.append(\n      \"JOBROLES\",\n      document.getElementById(\"jobDesc\").innerText\n    );\n\n    dataObject.append(\n      \"JOBIMAGE\",\n      document.getElementById(\"jobFile\").files[0]\n    );\n\n    // dataObject.append(\"JOBSALARYSTARTRANGE\",)\n\n    console.log(JobSalary)\n\n    if (\n      JobTitle.length > 2 &&\n      JobImage !== \"\" &&\n      document.getElementById(\"jobDesc\").innerText !== \"\\n\"\n    ) {\n      axios({\n        method: \"POST\",\n\n        url: urlLink,\n\n        data: dataObject\n      })\n        .then(function(response) {\n          document.getElementById(\"postFeedback\").innerHTML =\n            \"Great! You've just added a new blog post.\";\n          document.getElementById(\"postFeedback\").style.color =\n            \"rgba(1,16,10,1)\";\n        })\n\n        .catch(function(err) {\n          if (err.response.data.message === \"Invalid Email\") {\n            document.getElementById(\"postFeedback\").innerHTML =\n              \"Sorry, you're not authorized for this!\";\n          } else {\n            document.getElementById(\"postFeedback\").innerHTML =\n              err.response.data.message;\n          }\n          document.getElementById(\"postFeedback\").style.color = \"red\";\n        });\n    } else {\n      document.getElementById(\"postFeedback\").innerHTML =\n        \"Ops, seems all the fields are not well filled!\";\n      document.getElementById(\"postFeedback\").style.color = \"red\";\n    }\n\n\n  }\n  document.title = \"DarkBank | Admin | POST A NEW JOB\";\n  return (\n    <div>\n      <AdminDashboard />\n      <div>.</div>\n      <Card small className=\"addForm jobForm\">\n        <div className=\"form-title\">POST A NEW JOB</div>\n        <div style={{ marginLeft: \"1.1em\" }} id=\"postFeedback\"></div>\n        <CardBody>\n          <Form className=\"add-new-post\">\n            <FormInput size=\"lg\" className=\"job-col1\" placeholder=\"Job Title\" onChange={event => setJobTitle(event.target.value)} />\n            {/* <div>Validity</div> */}\n            <FormInput\n              size=\"lg\"\n              className=\"job-col1 job\" \n              type=\"date\" onChange={event => setJobValidity(event.target.value)}\n            />\n\n            {/* Import the File handling the Salary Range */}\n            <RangeSalary onChange={event => setJobSalary(event.target.value)}/>\n            <p> JOB SALARY IN DOLLARS: {JSON.stringify(this.state.value)} </p>\n        <Slider\n          connect\n          onSlide={this.handleSlide} className=\"slider\"\n          start={this.state.value}\n          range={{ min: 0, max: 10000 }} onChange={console.log(\"seen\")}\n        />\n            <p className=\"jobImgInd\">UPLOAD AND PREVIEW JOB IMAGE HERE!</p>\n\n            <CardImg id=\"imagePreview\" className=\"JobImage\" />\n\n            <input\n              type=\"file\"\n              size=\"lg\"\n              className=\"selectImage\"\n              placeholder=\"Job Title\"\n              onChange={displayImage} id=\"jobFile\"\n            />\n\n            <ReactQuill\n              className=\"add-new-post__editor mb-1 jobDescription\"\n              placeholder=\"Description of the Job here\" id=\"jobDesc\"\n            />\n          </Form>\n        </CardBody>\n        <div className=\"publishJob\">\n          <button className=\"publish-btn\" onClick={publishJob}>Publish</button>\n        </div>\n      </Card>\n\n      {/* <div style={{textAlign:\"center\"}}>Test</div> */}\n      <AdminFooter />\n    </div>\n  );\n}\n\nexport default AddJob;\n"]},"metadata":{},"sourceType":"module"}