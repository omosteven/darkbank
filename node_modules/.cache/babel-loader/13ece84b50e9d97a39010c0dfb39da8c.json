{"ast":null,"code":"import _regeneratorRuntime from \"/root/ReactApp/darkbank/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/root/ReactApp/darkbank/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/root/ReactApp/darkbank/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\n\nvar axios = require(\"axios\").default;\n\nvar _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    userState = _useState2[0],\n    setUserState = _useState2[1];\n\nvar checkUserState = function checkUserState() {\n  var urlLink = \"http://localhost:5000/user/checkUserState\";\n  return new Promise(function (resolve, reject) {\n    axios({\n      method: \"POST\",\n      url: urlLink,\n      data: {\n        token: localStorage.getItem(\"userToken\")\n      }\n    }).then(function (response) {\n      resolve(\"Active!\");\n    }).catch(function (error) {\n      if (error.response.message === \"Sorry, an error occurred!\") {\n        reject(\"Error!\");\n      } else {\n        resolve(\"Token Expired!\");\n      }\n    });\n  });\n};\n\nvar _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFetching = _useState4[0],\n    setIsFetching = _useState4[1];\n\nuseEffect(function () {\n  _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsFetching(true);\n            _context.next = 3;\n            return checkUserState();\n\n          case 3:\n            data = _context.sent;\n            setUserState(data);\n            setIsFetching(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))();\n}, []);\n\nif (isFetching) {\n  if (userState === \"Token Expired!\") {\n    sessionStorage.setItem(\"userState\", \"Expired!\");\n    window.location = \"http://localhost:3000/auth/signin/\";\n  }\n}","map":{"version":3,"sources":["/root/ReactApp/darkbank/src/Components/dashboard/requests.js"],"names":["useState","useEffect","axios","require","default","userState","setUserState","checkUserState","urlLink","Promise","resolve","reject","method","url","data","token","localStorage","getItem","then","response","catch","error","message","isFetching","setIsFetching","sessionStorage","setItem","window","location"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;gBAEkCJ,QAAQ,CAAC,EAAD,C;;IAAnCK,S;IAAWC,Y;;AAEhB,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,OAAO,GAAG,2CAAhB;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCT,IAAAA,KAAK,CAAC;AACJU,MAAAA,MAAM,EAAE,MADJ;AAGJC,MAAAA,GAAG,EAAEL,OAHD;AAKJM,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADH;AALF,KAAD,CAAL,CASGC,IATH,CASQ,UAAAC,QAAQ,EAAI;AAChBT,MAAAA,OAAO,CAAC,SAAD,CAAP;AACD,KAXH,EAYGU,KAZH,CAYS,UAAAC,KAAK,EAAI;AACd,UAAIA,KAAK,CAACF,QAAN,CAAeG,OAAf,KAA2B,2BAA/B,EAA4D;AAC1DX,QAAAA,MAAM,CAAC,QAAD,CAAN;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAAC,gBAAD,CAAP;AACD;AACF,KAlBH;AAmBD,GApBM,CAAP;AAqBD,CAvBD;;iBA2BoCV,QAAQ,CAAC,KAAD,C;;IAArCuB,U;IAAYC,a;;AAEnBvB,SAAS,CAAC,YAAM;AACd,2DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCuB,YAAAA,aAAa,CAAC,IAAD,CAAb;AADD;AAAA,mBAEqBjB,cAAc,EAFnC;;AAAA;AAEOO,YAAAA,IAFP;AAGCR,YAAAA,YAAY,CAACQ,IAAD,CAAZ;AACAU,YAAAA,aAAa,CAAC,KAAD,CAAb;;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;AAMD,CAPQ,EAON,EAPM,CAAT;;AASA,IAAID,UAAJ,EAAgB;AACd,MAAGlB,SAAS,KAAK,gBAAjB,EAAkC;AAChCoB,IAAAA,cAAc,CAACC,OAAf,CAAuB,WAAvB,EAAmC,UAAnC;AACDC,IAAAA,MAAM,CAACC,QAAP,GAAkB,oCAAlB;AACA;AACF","sourcesContent":["import { useState, useEffect } from \"react\";\nconst axios = require(\"axios\").default;\n\nconst [userState, setUserState] = useState(\"\");\n\n  const checkUserState = () => {\n    const urlLink = \"http://localhost:5000/user/checkUserState\";\n    return new Promise((resolve, reject) => {\n      axios({\n        method: \"POST\",\n\n        url: urlLink,\n\n        data: {\n          token: localStorage.getItem(\"userToken\")\n        }\n      })\n        .then(response => {\n          resolve(\"Active!\");\n        })\n        .catch(error => {\n          if (error.response.message === \"Sorry, an error occurred!\") {\n            reject(\"Error!\");\n          } else {\n            resolve(\"Token Expired!\");\n          }\n        });\n    });\n  };\n\n \n\n  const [isFetching, setIsFetching] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setIsFetching(true);\n      const data = await  checkUserState();\n      setUserState(data);\n      setIsFetching(false);\n    })();\n  }, []);\n\n  if (isFetching) {\n    if(userState === \"Token Expired!\"){\n      sessionStorage.setItem(\"userState\",\"Expired!\")\n     window.location = \"http://localhost:3000/auth/signin/\"\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}