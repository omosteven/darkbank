{"ast":null,"code":"import _regeneratorRuntime from \"/root/ReactApp/darkbank/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/root/ReactApp/darkbank/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/root/ReactApp/darkbank/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    userState = _useState2[0],\n    setUserState = _useState2[1];\n\nvar checkUserState = function checkUserState() {\n  var urlLink = \"http://localhost:5000/user/checkUserState\";\n  return new Promise(function (resolve, reject) {\n    axios({\n      method: \"POST\",\n      url: urlLink,\n      data: {\n        token: localStorage.getItem(\"userToken\")\n      }\n    }).then(function (response) {\n      resolve(\"Active!\");\n    }).catch(function (error) {\n      if (error.response.message === \"Sorry, an error occurred!\") {\n        reject(\"Error!\");\n      } else {\n        resolve(\"Token Expired!\");\n      }\n    });\n  });\n};\n\nvar RedirectState = function RedirectState() {\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFetching = _useState4[0],\n      setIsFetching = _useState4[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsFetching(true);\n              _context.next = 3;\n              return checkUserState();\n\n            case 3:\n              data = _context.sent;\n              setUserState(data);\n              setIsFetching(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n\n  if (isFetching) {\n    if (userState === \"Token Expired!\") {\n      sessionStorage.setItem(\"userState\", \"Expired!\");\n      window.location = \"http://localhost:3000/auth/signin/\";\n    }\n  }\n};\n\nexport default RedirectState;","map":{"version":3,"sources":["/root/ReactApp/darkbank/src/Components/dashboard/requests.js"],"names":["useState","userState","setUserState","checkUserState","urlLink","Promise","resolve","reject","axios","method","url","data","token","localStorage","getItem","then","response","catch","error","message","RedirectState","isFetching","setIsFetching","useEffect","sessionStorage","setItem","window","location"],"mappings":";;;;gBACkCA,QAAQ,CAAC,EAAD,C;;IAAnCC,S;IAAWC,Y;;AAEhB,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,OAAO,GAAG,2CAAhB;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,IAAAA,KAAK,CAAC;AACJC,MAAAA,MAAM,EAAE,MADJ;AAGJC,MAAAA,GAAG,EAAEN,OAHD;AAKJO,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADH;AALF,KAAD,CAAL,CASGC,IATH,CASQ,UAAAC,QAAQ,EAAI;AAChBV,MAAAA,OAAO,CAAC,SAAD,CAAP;AACD,KAXH,EAYGW,KAZH,CAYS,UAAAC,KAAK,EAAI;AACd,UAAIA,KAAK,CAACF,QAAN,CAAeG,OAAf,KAA2B,2BAA/B,EAA4D;AAC1DZ,QAAAA,MAAM,CAAC,QAAD,CAAN;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAAC,gBAAD,CAAP;AACD;AACF,KAlBH;AAmBD,GApBM,CAAP;AAqBD,CAvBD;;AA0BF,IAAMc,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,mBAEUpB,QAAQ,CAAC,KAAD,CAFlB;AAAA;AAAA,MAEnBqB,UAFmB;AAAA,MAEPC,aAFO;;AAI1BC,EAAAA,SAAS,CAAC,YAAM;AACd,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCD,cAAAA,aAAa,CAAC,IAAD,CAAb;AADD;AAAA,qBAEqBnB,cAAc,EAFnC;;AAAA;AAEOQ,cAAAA,IAFP;AAGCT,cAAAA,YAAY,CAACS,IAAD,CAAZ;AACAW,cAAAA,aAAa,CAAC,KAAD,CAAb;;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAID,UAAJ,EAAgB;AACd,QAAGpB,SAAS,KAAK,gBAAjB,EAAkC;AAChCuB,MAAAA,cAAc,CAACC,OAAf,CAAuB,WAAvB,EAAmC,UAAnC;AACDC,MAAAA,MAAM,CAACC,QAAP,GAAkB,oCAAlB;AACA;AACF;AAEF,CApBD;;AAsBA,eAAeP,aAAf","sourcesContent":["\nconst [userState, setUserState] = useState(\"\");\n\n  const checkUserState = () => {\n    const urlLink = \"http://localhost:5000/user/checkUserState\";\n    return new Promise((resolve, reject) => {\n      axios({\n        method: \"POST\",\n\n        url: urlLink,\n\n        data: {\n          token: localStorage.getItem(\"userToken\")\n        }\n      })\n        .then(response => {\n          resolve(\"Active!\");\n        })\n        .catch(error => {\n          if (error.response.message === \"Sorry, an error occurred!\") {\n            reject(\"Error!\");\n          } else {\n            resolve(\"Token Expired!\");\n          }\n        });\n    });\n  };\n\n \nconst RedirectState = () => {\n\n  const [isFetching, setIsFetching] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setIsFetching(true);\n      const data = await  checkUserState();\n      setUserState(data);\n      setIsFetching(false);\n    })();\n  }, []);\n\n  if (isFetching) {\n    if(userState === \"Token Expired!\"){\n      sessionStorage.setItem(\"userState\",\"Expired!\")\n     window.location = \"http://localhost:3000/auth/signin/\"\n    }\n  }\n\n}\n\nexport default RedirectState;"]},"metadata":{},"sourceType":"module"}